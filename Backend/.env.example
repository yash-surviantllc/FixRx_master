# FixRx Backend Environment Configuration
# Copy this file to .env and update with your actual values

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
NODE_ENV=development
PORT=3000
API_VERSION=v1

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL Database Settings
DATABASE_URL="postgresql://fixrx_user:your_password@localhost:5432/fixrx_db?schema=public"
DB_HOST=localhost
DB_PORT=5432
DB_NAME=fixrx_db
DB_USER=fixrx_user
DB_PASSWORD=your_secure_password

# =============================================================================
# REDIS CONFIGURATION (Optional - for caching and sessions)
# =============================================================================
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
# REDIS_PASSWORD=your_redis_password

# =============================================================================
# JWT AUTHENTICATION
# =============================================================================
# Generate secure random strings for production
# Use: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=your_jwt_secret_key_minimum_32_characters_long
JWT_EXPIRES_IN=7d
JWT_REFRESH_SECRET=your_refresh_token_secret_minimum_32_characters_long
JWT_REFRESH_EXPIRES_IN=30d

# =============================================================================
# AUTH0 CONFIGURATION (Optional - if using Auth0)
# =============================================================================
AUTH0_DOMAIN=your-domain.auth0.com
AUTH0_CLIENT_ID=your_auth0_client_id
AUTH0_CLIENT_SECRET=your_auth0_client_secret
AUTH0_AUDIENCE=your_api_identifier

# =============================================================================
# GOOGLE OAUTH CONFIGURATION
# =============================================================================
# Get these from Google Cloud Console
# https://console.developers.google.com/
GOOGLE_CLIENT_ID=your_google_client_id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your_google_client_secret

# =============================================================================
# EMAIL SERVICE CONFIGURATION (SendGrid)
# =============================================================================
# Get API key from SendGrid dashboard
# https://app.sendgrid.com/settings/api_keys
SENDGRID_API_KEY=SG.your_sendgrid_api_key
SENDGRID_FROM_EMAIL=noreply@yourdomain.com
SENDGRID_FROM_NAME=FixRx

# =============================================================================
# SMS SERVICE CONFIGURATION (Twilio)
# =============================================================================
# Get credentials from Twilio Console
# https://console.twilio.com/
TWILIO_ACCOUNT_SID=ACyour_twilio_account_sid
TWILIO_AUTH_TOKEN=your_twilio_auth_token
TWILIO_PHONE_NUMBER=+1234567890

# =============================================================================
# FILE STORAGE CONFIGURATION (AWS S3)
# =============================================================================
# AWS S3 for file uploads
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1
AWS_S3_BUCKET=your-fixrx-uploads-bucket

# =============================================================================
# FIREBASE CONFIGURATION (Optional - for push notifications)
# =============================================================================
FIREBASE_PROJECT_ID=your_firebase_project_id
FIREBASE_PRIVATE_KEY_ID=your_private_key_id
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nyour_private_key\n-----END PRIVATE KEY-----\n"
FIREBASE_CLIENT_EMAIL=firebase-adminsdk@your-project.iam.gserviceaccount.com
FIREBASE_CLIENT_ID=your_firebase_client_id
FIREBASE_AUTH_URI=https://accounts.google.com/o/oauth2/auth
FIREBASE_TOKEN_URI=https://oauth2.googleapis.com/token

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================
# Rate limiting settings for API endpoints
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=1000

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================
# Maximum file size in bytes (5MB default)
MAX_FILE_SIZE=5242880
# Allowed file types (comma-separated)
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,application/pdf

# =============================================================================
# GEOGRAPHIC SEARCH CONFIGURATION
# =============================================================================
# Default search radius in kilometers
DEFAULT_SEARCH_RADIUS_KM=50
# Maximum search radius in kilometers
MAX_SEARCH_RADIUS_KM=500

# =============================================================================
# FRONTEND URLS
# =============================================================================
# Frontend application URLs for CORS and redirects
# For mobile app development, use custom scheme: fixrx://
# For production, use HTTPS URL: https://fixrx.com
FRONTEND_URL=fixrx://
APP_SCHEME=fixrx
API_BASE_URL=http://localhost:3000/api/v1

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# Allowed origins for CORS (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:8080

# =============================================================================
# EMAIL TEMPLATES (Optional)
# =============================================================================
# Leave empty to use default HTML templates
EMAIL_TEMPLATE_INVITATION=
EMAIL_TEMPLATE_WELCOME=
EMAIL_TEMPLATE_PASSWORD_RESET=

# =============================================================================
# MONITORING AND LOGGING
# =============================================================================
# Logging level: error, warn, info, debug
LOG_LEVEL=info

# =============================================================================
# EXTERNAL API CONFIGURATION (Optional)
# =============================================================================
# Third-party API integrations
MESH_API_KEY=your_mesh_api_key
MESH_API_URL=https://api.mesh.com/v1

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================
# Set to true to enable debug mode
DEBUG=false

# =============================================================================
# PRODUCTION SETTINGS
# =============================================================================
# Uncomment and configure for production deployment

# SSL Configuration
# SSL_KEY_PATH=/path/to/ssl/private.key
# SSL_CERT_PATH=/path/to/ssl/certificate.crt

# Session Configuration
# SESSION_SECRET=your_session_secret_for_production

# Security Headers
# HELMET_ENABLED=true

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 1. Copy this file to .env: cp .env.example .env
# 2. Update all placeholder values with your actual credentials
# 3. Generate secure JWT secrets using: 
#    node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# 4. Setup your database and update DB_* variables
# 5. Configure email service (SendGrid) for magic link authentication
# 6. Setup Google OAuth if using social authentication
# 7. Configure other services as needed for your deployment

# =============================================================================
# SECURITY NOTES
# =============================================================================
# - Never commit .env file to version control
# - Use strong, unique passwords and secrets
# - Rotate API keys and secrets regularly
# - Use environment-specific configurations
# - Enable HTTPS in production
# - Regularly update dependencies
